#to demonstrate zipkin pull

docker run -d -p 9411:9411 openzipkin/zipkin


#to create mysql container from mysql image 

docker run --name virtusa-mysql -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=virtusacustomerdb -e MYSQL_USER=demo_user -e MYSQL_PASSWORD=demo_pass -d mysql


#testing mysql instance

docker exec -it virtusa-mysql mysql -u root -p


#create the spring boot application docker image
docker build -f dockerfile -t <imagename> .

#create the spring boot application first container

docker run -p 6060:6060 --name virtusa-c1 --link virtusa-mysql:mysql -d rmapp:latest

#create the spring boot application second container 

docker run -p 6060:6060 --name virtusa-c1 --link virtusa-mysql:mysql -d rmapp:latest


# push image to docker hub

docker login

docker tag rmapp:latest eswaribala/virtusausoct2020:v1

docker push eswaribala/virtusausoct2020:v1

Data Volume
Method 1

docker container run -it --tty ubuntu /bin/bash

docker container run -it -v/udata --tty ubuntu /bin/bash

cd udata
touch file1.txt
exit
docker container restart 2eec01eb7368
docker attach 2eec01eb7368
exit
docker container rm 2eec01eb7368
docker volume ls

Method 2
Docker file sharing
docker container run -it -v e:/DockerFileShare/project/web01:/mnt/test ubuntu /bin/bash

docker container run -it -v E:/dockerfilesharing/project/web01:/mnt/dotnetshare ubuntu /bin/bash

Method 3

data volume container for data sharing
docker run -it -v /data --name container1 busybox

cd data
touch file1.txt
touch file2.txt
let it be running
open another terminal
docker exec container1 ls /data

launch another container
docker run -it --volumes-from container1 --name container2 busybox

#Read only
docker run -ti --name=Container6 --volumes-from Container4:ro ubuntu


copy specific folder / file

***** compose level possible (exclude or include)

Method 4

docker volume create rmdatavol
docker volume create mssqlvol
docker volume ls

docker volume inspect mssqlvol
docker volume rm my-vol

Attach volume to container

docker run -it -v /mssqlvol --name msb1 busybox
***d->detached****
docker run -d -v /mssqlvol --name msb2 busybox

docker run -it -p 8074:8070 -v/data --name appointment-c3
--link virtusa-mysql:mysql appointmentapp:latest
docker container inspect e350ffad6d4c
can check volume name
-----------------------------------------------------
docker network
docker network ls
docker network inspect host

docker run my_container --net=my_network


docker network inspect bridge

create our own network

docker network create --driver bridge my_isolated_bridge_network
docker network create --driver bridge virtusa_network
docker network inspect my_isolated_bridge_network
docker network ls
docker run --net=my_isolated_bridge_network --name=my_psql_db postgres
docker run –it -–network=my_isolated_bridge_network ubuntu:latest /bin/bash 
docker network inspect my_isolated_bridge_network

